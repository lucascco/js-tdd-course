{"version":3,"sources":["webpack://spotifyWrapper/webpack/universalModuleDefinition","webpack://spotifyWrapper/webpack/bootstrap","webpack://spotifyWrapper/(webpack)/buildin/harmony-module.js","webpack://spotifyWrapper/./src/album.js","webpack://spotifyWrapper/./src/config.js","webpack://spotifyWrapper/./src/index.js","webpack://spotifyWrapper/./src/search.js","webpack://spotifyWrapper/./src/utils.js"],"names":["getAlbum","idAlbum","fetch","then","getAlbumTracks","getAlbums","idsAlbum","API_URL","module","exports","searchAlbums","searchArtists","searchPlaylists","searchTracks","search","query","type","toJson","data","json"],"mappings":"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","file":"spotify-wrapper.umd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"spotifyWrapper\"] = factory();\n\telse\n\t\troot[\"spotifyWrapper\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/*  global fetch */\n\nimport API_URL from './config';\nimport toJson from './utils';\n\nexport const getAlbum = idAlbum =>\n  fetch(`${API_URL}/albums/${idAlbum}`).then(toJson);\n\nexport const getAlbumTracks = idAlbum =>\n  fetch(`${API_URL}/albums/${idAlbum}/tracks`).then(toJson);\n\nexport const getAlbums = idsAlbum =>\n  fetch(`${API_URL}/albums?ids=${idsAlbum}`).then(toJson);\n","const API_URL = 'https://api.spotify.com/v1';\nexport default API_URL;\n","import {\n  searchAlbums,\n  searchArtists,\n  searchPlaylists,\n  searchTracks,\n  search,\n} from './search';\n\nimport {\n  getAlbum,\n  getAlbums,\n  getAlbumTracks,\n} from './album';\n\nmodule.exports = {\n  searchAlbums,\n  searchArtists,\n  searchPlaylists,\n  searchTracks,\n  search,\n  getAlbum,\n  getAlbums,\n  getAlbumTracks,\n};\n","/*  global fetch */\n\nimport API_URL from './config';\nimport toJson from './utils';\n\nexport const search = (query, type) =>\n  fetch(`${API_URL}/search/q=${query}&type=${type}`).then(toJson);\n\nexport const searchArtists = query =>\n  search(query, 'artist');\n\nexport const searchAlbums = query =>\n  search(query, 'album');\n\nexport const searchTracks = query =>\n  search(query, 'track');\n\nexport const searchPlaylists = query =>\n  search(query, 'playlist');\n","\nconst toJson = data => data.json();\nexport default toJson;\n"],"sourceRoot":""}